//ОСНОВНАЯ ПРОЦЕДУРА
//Объект			- обрабатываемый ОБЪЕКТ
//ИмяТабличнойЧасти	- табличная часть ОБЪЕКТА, изменяемая в обработке
//ИмяТабличногоПоля - табличное поле формы ОБЪЕКТА, из которой вызвана обработка

Процедура Инициализировать(Объект, ИмяТабличнойЧасти, ИмяТабличногоПоля) Экспорт
	//0. Проверка
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Предупреждение("Не выбран контрагент!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
		Предупреждение("Не выбрана валюта документа!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Предупреждение("Не выбрана дата окончания периода сверки!");
		Возврат;
	КонецЕсли;

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
	    Предупреждение("Неверно задан период сверки расчетов!");
		Возврат;
	КонецЕсли;
	
	Если Объект.ПоДаннымОрганизации.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		Объект.ПоДаннымОрганизации.Очистить();
	КонецЕсли;

	Форма=ПолучитьФорму("НастройкаОтбораУчета");
	Рез=Форма.ОткрытьМодально();
	Если Рез=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//1. Расчет остатков
	Запрос=Новый ПостроительЗапроса;
	Запрос.Текст="ВЫБРАТЬ
	             |	СУММА(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовОборот) КАК Сумма
	             |ИЗ
	             |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	             |			,
	             |			&ДатаНачала,
	             |			Регистратор,
	             |			Организация = &Организация
	             |				И Контрагент = &Контрагент {(ДоговорКонтрагента), (ДоговорКонтрагента.ВалютаВзаиморасчетов) КАК ВалютаДоговора, (Сделка) КАК Сделка}) КАК ВзаиморасчетыСКонтрагентамиОбороты
	             |{ГДЕ
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВУправленческомУчете КАК УУ,
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВБухгалтерскомУчете КАК БУ,
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВНалоговомУчете КАК НУ}";
	Запрос.Параметры.Вставить("ДатаНачала",		НачалоДня(Объект.ДатаНачала));
	Запрос.Параметры.Вставить("Организация",	Объект.Организация);
	Запрос.Параметры.Вставить("Контрагент",		Объект.Контрагент);
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Запрос.Отбор.Добавить("ДоговорКонтрагента").Установить(Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
		Запрос.Отбор.Добавить("ВалютаДоговора").Установить(Объект.ВалютаДокумента);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Сделка) Тогда
		Запрос.Отбор.Добавить("Сделка").Установить(Объект.Сделка);
	КонецЕсли;
	//Самое интересное.
	Если Рез.УУ<>0 Тогда
		Запрос.Отбор.Добавить("УУ").Установить(Рез.УУ=1);
	КонецЕсли;
	Если Рез.БУ<>0 Тогда
		Запрос.Отбор.Добавить("БУ").Установить(Рез.БУ=1);
	КонецЕсли;
	Если Рез.НУ<>0 Тогда
		Запрос.Отбор.Добавить("НУ").Установить(Рез.НУ=1);
	КонецЕсли;
	
	Запрос.Выполнить();
	Если НЕ Запрос.Результат.Пустой() Тогда
		Выборка=Запрос.Результат.Выбрать();
		Выборка.Следующий();
		Объект.ОстатокНаНачало=Выборка.Сумма;
	КонецЕсли;
	
	//2. Выборка оборотов
	Запрос=Новый ПостроительЗапроса;
	Запрос.Текст="ВЫБРАТЬ
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Период КАК Дата,
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор КАК ДокументРегистратор,
	             |	ВЫБОР
	             |		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход - ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход > 0
	             |			ТОГДА ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход - ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход
	             |		ИНАЧЕ 0
	             |	КОНЕЦ КАК Дебет,
	             |	ВЫБОР
	             |		КОГДА ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход - ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход < 0
	             |			ТОГДА -(ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход - ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход)
	             |		ИНАЧЕ 0
	             |	КОНЕЦ КАК Кредит
	             |ИЗ
	             |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(
	             |			&ДатаНачала,
	             |			&ДатаОкончания,
	             |			Регистратор,
	             |			Организация = &Организация
	             |				И Контрагент = &Контрагент {(ДоговорКонтрагента), (ДоговорКонтрагента.ВалютаВзаиморасчетов) КАК ВалютаДоговора, (Сделка) КАК Сделка}) КАК ВзаиморасчетыСКонтрагентамиОбороты
	             |ГДЕ
	             |	ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход <> ВзаиморасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход
	             |{ГДЕ
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВУправленческомУчете КАК УУ,
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВБухгалтерскомУчете КАК БУ,
	             |	ВзаиморасчетыСКонтрагентамиОбороты.Регистратор.ОтражатьВНалоговомУчете КАК НУ}
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Дата";
	Запрос.Параметры.Вставить("ДатаНачала",		НачалоДня(Объект.ДатаНачала));
	Запрос.Параметры.Вставить("ДатаОкончания",	КонецДня(Объект.ДатаОкончания));
	Запрос.Параметры.Вставить("Организация",	Объект.Организация);
	Запрос.Параметры.Вставить("Контрагент",		Объект.Контрагент);
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Запрос.Отбор.Добавить("ДоговорКонтрагента").Установить(Объект.Контрагент);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
		Запрос.Отбор.Добавить("ВалютаДоговора").Установить(Объект.ВалютаДокумента);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Сделка) Тогда
		Запрос.Отбор.Добавить("Сделка").Установить(Объект.Сделка);
	КонецЕсли;
	//Самое интересное.
	Если Рез.УУ<>0 Тогда
		Запрос.Отбор.Добавить("УУ").Установить(Рез.УУ=1);
	КонецЕсли;
	Если Рез.БУ<>0 Тогда
		Запрос.Отбор.Добавить("БУ").Установить(Рез.БУ=1);
	КонецЕсли;
	Если Рез.НУ<>0 Тогда
		Запрос.Отбор.Добавить("НУ").Установить(Рез.НУ=1);
	КонецЕсли;
	
	Запрос.Выполнить();
	ТаблицаРезультата=Запрос.Результат.Выгрузить();
	ЗаполнитьПредставлениеДокументов(ТаблицаРезультата);
	Объект.ПоДаннымОрганизации.Загрузить(ТаблицаРезультата);
	Объект.ЗаполнитьПоДаннымОрганизации();
	
	//Из модуля формы
	ОстатокНаКонец = Объект.ОстатокНаНачало + Объект.ПоДаннымОрганизации.Итог("Дебет") -  Объект.ПоДаннымОрганизации.Итог("Кредит");
	Форма=Объект.ПолучитьФорму();
	Форма.ЭлементыФормы.ОстатокНаНачалоКонтрагент.Значение = - Объект.ОстатокНаНачало;
	Форма.ЭлементыФормы.ОстатокНаКонец.Значение = ОстатокНаКонец;
	
	ОстатокНаКонецКонтрагент = - Объект.ОстатокНаНачало + Объект.ПоДаннымКонтрагента.Итог("Дебет") -  Объект.ПоДаннымКонтрагента.Итог("Кредит");
	Форма.ЭлементыФормы.ОстатокНаКонецКонтрагент.Значение = ОстатокНаКонецКонтрагент;
	
	Если Объект.Расхождение <> ОстатокНаКонец + ОстатокНаКонецКонтрагент Тогда
		Объект.Расхождение = ОстатокНаКонец + ОстатокНаКонецКонтрагент;
	КонецЕсли; 
	Форма.ЭлементыФормы.Расхождение.Значение = Объект.Расхождение*(-1);
	Форма.ЭлементыФормы.РасхождениеКонтрагент.Значение = Объект.Расхождение*(-1);


КонецПроцедуры

//Из модуля документа
Процедура ЗаполнитьПредставлениеДокументов(ТаблицаЗначений)
	
	Если ТаблицаЗначений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	КэшПоТипам = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументРегистратор) Тогда 
			Продолжить;
		КонецЕсли;
		
		ТипТекущегоДокумента = ТипЗнч(СтрокаТаблицы.ДокументРегистратор);
		Если Документы.ТипВсеСсылки().СодержитТип(ТипТекущегоДокумента) Тогда
			
			МассивТипа = КэшПоТипам[ТипТекущегоДокумента];
			Если МассивТипа = Неопределено Тогда
				МассивТипа = Новый Массив;
				КэшПоТипам.Вставить(ТипТекущегоДокумента, МассивТипа);
			КонецЕсли;
			
			МассивТипа.Добавить(СтрокаТаблицы.ДокументРегистратор);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КэшПоТипам.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаЗначений.Индексы.Добавить("ДокументРегистратор");
	
	ТаблицаЗначений.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	Запрос = Новый Запрос;

	Для Каждого КлючИЗначение ИЗ КэшПоТипам Цикл
		МетаданныеТипа = Метаданные.НайтиПоТипу(КлючИЗначение.Ключ);
		ИмяМетаданных  = МетаданныеТипа.Имя;
		ЕстьНомерВходящегоДокумента = МетаданныеТипа.Реквизиты.Найти("НомерВходящегоДокумента") <> Неопределено;
		ЕстьДатаВходящегоДокумента  = МетаданныеТипа.Реквизиты.Найти("ДатаВходящегоДокумента") <> Неопределено;

		Запрос.Текст = Запрос.Текст
		+ ?(Запрос.Текст = "", "",
		" 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|")
		+ "
		|ВЫБРАТЬ
		|	""" + МетаданныеТипа.Синоним + """ КАК ПредставлениеТипа,
		|	Док.Ссылка  КАК Ссылка,
		|	" + ?(ЕстьНомерВходящегоДокумента, "Док.НомерВходящегоДокумента", "НЕОПРЕДЕЛЕНО") + " КАК Номер,
		|	" + ?(ЕстьДатаВходящегоДокумента, "Док.ДатаВходящегоДокумента", "Док.Дата") + " КАК Дата
		|ИЗ
		|	Документ."+ИмяМетаданных+" КАК Док
		|ГДЕ Док.Ссылка В (&ДокументыТипа_"+ИмяМетаданных+")";
		Запрос.УстановитьПараметр("ДокументыТипа_"+ИмяМетаданных, КлючИЗначение.Значение);
		
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерДокумента  = ?(Выборка.Номер = Неопределено, ОбщегоНазначения.ПолучитьНомерНаПечать(Выборка.Ссылка), Выборка.Номер);
		ДатаДокумента = Формат(Выборка.Дата, "ДФ='дд ММ гггг'");
		СтрокаДокумента = ТаблицаЗначений.Найти(Выборка.Ссылка, "ДокументРегистратор");
		СтрокаДокумента.Представление =  Выборка.ПредставлениеТипа + " № " + НомерДокумента + " от " + ДатаДокумента;
	КонецЦикла;
	
КонецПроцедуры

